# -*- coding: utf-8 -*-
"""Agriculture: Python Mini Project

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18Ovx3xrJFy7GJJ4Oc_yxpFyavP7rqYvb
"""

import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

df=pd.read_csv("/content/sample_data/crop_production.csv")
df

df.shape

df.info()

df.isnull().sum()

mean_prod=(3730/242361)*100
mean_prod

df1=pd.DataFrame(df)

df1.dropna(subset=["Production"],axis=0,inplace=True)

df1.isnull().sum()

plt.tick_params(labelsize=10)
sns.heatmap(df1.corr(),annot=True);

"""No variable shows high corelation with other variables.

**STATE WISE ANALYSIS:**
"""

df1.State_Name.nunique()

"""33 Unique states data available"""

df1.State_Name.unique()

df.State_Name.value_counts()

"""**DISTRICT WISE ANALYSIS:**"""

df1.District_Name.nunique()

df1.District_Name.unique()

df1.District_Name.value_counts()

"""**CROP YEAR WISE ANALYSIS:**"""

print(df1.Crop_Year.min())
print(df1.Crop_Year.max())
print(df1.Crop_Year.nunique())

df1.Crop_Year.value_counts()

"""**SEASON WISE ANALYSIS:**"""

df1.Season.nunique()

df1.Season.unique()

df1.Season.value_counts()

"""**CROP WISE ANALYSIS:**"""

df1.Crop.nunique()

df1.Crop.unique()

df1.Crop.value_counts()

"""**ZONE SEGREGATION:**"""

north_india = ['Jammu and Kashmir', 'Punjab', 'Himachal Pradesh', 'Haryana', 'Uttarakhand', 'Uttar Pradesh', 'Chandigarh']
east_india = ['Bihar', 'Odisha', 'Jharkhand', 'West Bengal']
south_india = ['Andhra Pradesh', 'Karnataka', 'Kerala' ,'Tamil Nadu', 'Telangana']
west_india = ['Rajasthan' , 'Gujarat', 'Goa','Maharashtra']
central_india = ['Madhya Pradesh', 'Chhattisgarh']
north_east_india = ['Assam', 'Sikkim', 'Nagaland', 'Meghalaya', 'Manipur', 'Mizoram', 'Tripura', 'Arunachal Pradesh']
ut_india = ['Andaman and Nicobar Islands', 'Dadra and Nagar Haveli', 'Puducherry']

def get_zonal_names(row):
    if row['State_Name'].strip() in north_india:
        val = 'North Zone'
    elif row['State_Name'].strip()  in south_india:
        val = 'South Zone'
    elif row['State_Name'].strip()  in east_india:
        val = 'East Zone'
    elif row['State_Name'].strip()  in west_india:
        val = 'West Zone'
    elif row['State_Name'].strip()  in central_india:
        val = 'Central Zone'
    elif row['State_Name'].strip()  in north_east_india:
        val = 'NE Zone'
    elif row['State_Name'].strip()  in ut_india:
        val = 'Union Terr'
    else:
        val = 'No Value'
    return val

df1['Zones']=df1.apply(get_zonal_names, axis=1)
df1['Zones'].unique()

df1

df1.Zones.value_counts()

"""**CROP CATEGORY SEGREGATION:**"""

crop=df1['Crop']
def cat_crop(crop):
    for i in ['Rice','Maize','Wheat','Barley','Varagu','Other Cereals & Millets','Ragi','Small millets','Bajra','Jowar', 'Paddy','Total foodgrain','Jobster']:
        if crop==i:
            return 'Cereal'
    for i in ['Moong','Urad','Arhar/Tur','Peas & beans','Masoor',
              'Other Kharif pulses','other misc. pulses','Ricebean (nagadal)',
              'Rajmash Kholar','Lentil','Samai','Blackgram','Korra','Cowpea(Lobia)',
              'Other  Rabi pulses','Other Kharif pulses','Peas & beans (Pulses)','Pulses total','Gram']:
        if crop==i:
            return 'Pulses'
    for i in ['Peach','Apple','Litchi','Pear','Plums','Ber','Sapota','Lemon','Pome Granet',
               'Other Citrus Fruit','Water Melon','Jack Fruit','Grapes','Pineapple','Orange',
               'Pome Fruit','Citrus Fruit','Other Fresh Fruits','Mango','Papaya','Coconut','Banana']:
        if crop==i:
            return 'Fruits'
    for i in ['Bean','Lab-Lab','Moth','Guar seed','Soyabean','Horse-gram']:
        if crop==i:
            return 'Beans'
    for i in ['Turnip','Peas','Beet Root','Carrot','Yam','Ribed Guard','Ash Gourd ','Pump Kin','Redish','Snak Guard','Bottle Gourd',
              'Bitter Gourd','Cucumber','Drum Stick','Cauliflower','Beans & Mutter(Vegetable)','Cabbage',
              'Bhindi','Tomato','Brinjal','Khesari','Sweet potato','Potato','Onion','Tapioca','Colocosia']:
              if crop==i:
                return 'Vegetables'
    for i in ['Perilla','Ginger','Cardamom','Black pepper','Dry ginger','Garlic','Coriander','Turmeric','Dry chillies','Cond-spcs other']:
        if crop==i:
            return 'spices'
    for i in ['other fibres','Kapas','Jute & mesta','Jute','Mesta','Cotton(lint)','Sannhamp']:
        if crop==i:
            return 'fibres'
    for i in ['Arcanut (Processed)','Atcanut (Raw)','Cashewnut Processed','Cashewnut Raw','Cashewnut','Arecanut','Groundnut']:
        if crop==i:
            return 'Nuts'
    for i in ['other oilseeds','Safflower','Niger seed','Castor seed','Linseed','Sunflower','Rapeseed &Mustard','Sesamum','Oilseeds total']:
        if crop==i:
            return 'oilseeds'
    for i in ['Tobacco','Coffee','Tea','Sugarcane','Rubber']:
        if crop==i:
            return 'Commercial'

df1['cat_crop']=df1['Crop'].apply(cat_crop)

df1

df1["cat_crop"].value_counts()

"""**VISUALISATIONS:**"""

df2=df1.copy()

df2

plt.figure(figsize=(21,10))
sns.scatterplot(data=df2,x="State_Name",y="cat_crop",hue="Season",s=200)
plt.legend(loc='down left')
plt.xticks(rotation=90)
plt.show()

"""From the above scatter plot we can get an overlook of which category of crop is being harvested in each State."""

a=df2.groupby(df2['Zones'])['Production'].sum()

df3=pd.DataFrame(a)

df3

df3['Zones']=df3.index

df3=df3.sort_values(by='Production',ascending=False)

df3

plt.figure(figsize=(10,10))
sns.barplot(x='Zones',y='Production',data=df3)
plt.yscale('log')
plt.title('Zone-Wise Production: Total')

"""From the above Visualisation we can interpret that most of the crop production in India comes from Southern India."""

df4 =  df2[(df2["Zones"] == 'South Zone')]
plt.figure(figsize=(10,10))
sns.barplot(x='State_Name',y='Production',data=df4)
plt.yscale('log')
plt.title('Southern-Zone Production')

b=df4.groupby('State_Name')['Area'].sum()

df5=pd.DataFrame(b)
df5['State_Name']=df5.index
df5

plt.figure(figsize=(10,10))
plt.pie(df5['Area'], labels=df5['State_Name'],autopct='%.0f%%')
plt.title('Southern-Zone Area Distribution')
plt.show()

"""From above two graphs we can see that even though Kerala has less goegraphical area (around 6%) it still contributes majority of the crop production in Southern India whereas Karnataka having 37% geographical area has less crop production in Southern India. """

df4['cat_crop'].nunique()

df4['cat_crop'].unique()

df6 =  df4[(df4["State_Name"] == 'Kerala')]
plt.figure(figsize=(10,10))
sns.barplot(x='cat_crop',y='Production',data=df6)
#plt.yscale('log')
plt.title('Category Wise Production In Kerala')

""" In Kerala vegetables are mass produced than the other food categories. """

df6

df6['Season'].value_counts()

c=df6.groupby('Season')['Production'].sum()

df7=pd.DataFrame(c)
df7['Season']=df7.index
df8=df7.sort_values(by='Production').head(4)
df8

plt.figure(figsize=(10,10))
plt.pie(df8['Production'], labels=df8['Season'], autopct='%.0f%%')
plt.title('Season Wise Production In Kerala')
plt.show()

"""Production rate is very high during winters in Kerala as a result Kerala must be a major supplier of food items harvested in winter season in Southern India. """

d=df6.groupby('Crop')['Production'].sum()

df9=pd.DataFrame(d)
df9

df9=df9.sort_values(by='Production',ascending=False).head(10)
df9['Crop']=df9.index
df9

plt.figure(figsize=(11,11))
sns.barplot(x='Crop',y='Production',data=df9)
plt.yscale('log')
plt.title('Top 10 Crop Production In Kerala')

"""Analysis of individual crop production shows us that among the Nuts category which collectively has less production than other categories, Coconut is the mass produced food item in Kerala."""

e=df2[df2.columns[df2.columns.isin(['State_Name','Production','cat_crop'])]]
df10=pd.DataFrame(e)
df10=df10.dropna(axis=0,how='any')
df10=df10.groupby('State_Name').max('Production')
df10['State_Name']=df10.index
df10

Production = df10["Production"].values.tolist()
State= df10["State_Name"].tolist()

df11=pd.DataFrame(e)
df11

df11=df11.loc[df11['Production'].isin(Production)]

df11

df11=df11.sort_values(by='Production',ascending=False)

df11

df12 = df11.drop_duplicates(subset=["State_Name"])

df12

df12.shape

df12['cat_crop'].nunique()

plt.figure(figsize=(20,9))
sns.barplot(x='State_Name',y='Production',data=df12,hue='cat_crop',dodge=False)
plt.yscale('log')
plt.legend(loc='down left')
plt.xticks(rotation=90)
plt.title('Top Crop Categories Produced In Each State')
plt.show()

"""From the above visualisation we can make the inference that Commercial Crops and Cereals are widely grown crop categories across whole India. """